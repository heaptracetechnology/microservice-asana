omg: 1
lifecycle:
  startup:
    command: ["microservice-asana"]
info:
  version: 1.0.0
  title: Asana
  description: This is an asana service
  contact:
    name: Rohit Shetty
    url: https://github.com/ht68rohit
    email: rohits@heaptrace.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
actions:
  createProject:
    help: Create new project in asana.
    http:
      port: 3000
      method: post
      path: /createproject
      contentType: application/json
    arguments:
      name:
        type: string
        in: requestBody
        required: true
        help: The name for new project.
      notes:
        type: string
        in: requestBody
        help: The notes for new project.
      color:
        type: string
        in: requestBody
        help: The color for the new project.
      workspace:
        type: string
        in: requestBody
        required: true
        help: The workspace ID to create project in that workspace.
      public:
        type: boolean
        in: requestBody
        required: true
        help: Set true/false to keep your project public to organization.
    output:
      type: object
      contentType: application/json
      properties:
        id:
          help: The ID of project.
          type: string
        name:
          help: The name of project.
          type: string
        owner:
          help: The owner details of project.
          type: object
        workspace:
          help: The workspace details of project.
          type: object
        members:
          help: The members list from the project.
          type: list
        followers:
          help: The followers list from the project.
          type: list
  createTask:
    help: Create new task.
    http:
      port: 3000
      method: post
      path: /createtask
      contentType: application/json
    arguments:
      name:
        type: string
        in: requestBody
        required: true
        help: The name for new task.
      notes:
        type: string
        in: requestBody
        help: The notes for new task.
      assignee:
        type: string
        in: requestBody
        required: true
        help: The email address of assignee.
      projectId:
        type: string
        in: requestBody
        help: The ID of project to create task in that project.
      workspace:
        type: string
        in: requestBody
        required: true
        help: The workspace ID to create task in that workspace.
      followers:
        type: list
        in: requestBody
        help: The list of email address of all the follower for the task.
      hearted:
        type: boolean
        in: requestBody
        help: The provide true/false to like/unlike te task.
    output:
      type: object
      contentType: application/json
      properties:
        id:
          help: The ID of task.
          type: string
        assignee:
          help: The assignee details.
          type: object
        followers:
          help: The followers list from the project.
          type: list
        name:
          help: The name of project.
          type: string
        workspace:
          help: The workspace details of project.
          type: object
  deleteProject:
    help: Delete project.
    http:
      port: 3000
      method: post
      path: /deleteproject
      contentType: application/json
    arguments:
      projectId:
        type: string
        in: requestBody
        required: true
        help: The project id to delete.
    output:
      type: object
      contentType: application/json
      properties:
        success:
          help: Returns true/false.
          type: string
        message:
          help: The success message or error message if occurred.
          type: string
        statusCode:
          help: Returns http status code.
          type: int
  deleteTask:
    help: Delete task.
    http:
      port: 3000
      method: post
      path: /deletetask
      contentType: application/json
    arguments:
      taskId:
        type: string
        in: requestBody
        required: true
        help: The task id to delete.
    output:
      type: object
      contentType: application/json
      properties:
        success:
          help: Returns true/false.
          type: string
        message:
          help: The success message or error message if occurred.
          type: string
        statusCode:
          help: Returns http status code.
          type: int
  listTask:
    help: List task.
    http:
      port: 3000
      method: post
      path: /listtask
      contentType: application/json
    arguments:
      workspace:
        type: string
        in: requestBody
        required: true
        help: The workspace id to get tasks.
    output:
      type: list
      contentType: application/json
      properties:
        name:
          help: The name of workspace.
          type: string
        id:
          help: The workspace ID.
          type: string
  listWorkspace:
    help: List workspace.
    http:
      port: 3000
      method: post
      path: /listworkspace
      contentType: application/json
    output:
      type: list
      contentType: application/json
      properties:
        name:
          help: The name of workspace.
          type: string
        id:
          help: The workspace ID.
          type: string
  findTask:
    help: Find task.
    http:
      port: 3000
      method: post
      path: /findtask
      contentType: application/json
    arguments:
      taskId:
        type: string
        in: requestBody
        required: true
        help: The Task id to get task details.
    output:
      type: object
      contentType: application/json
      properties:
        id:
          help: The ID of task.
          type: string
        assignee:
          help: The assignee details.
          type: object
        followers:
          help: The followers list from the project.
          type: list
        name:
          help: The name of project.
          type: string
        workspace:
          help: The workspace details of project.
          type: object
  findProject:
    help: Find project.
    http:
      port: 3000
      method: post
      path: /findproject
      contentType: application/json
    arguments:
      projectId:
        type: string
        in: requestBody
        required: true
        help: The project id to get project details.
    output:
      type: object
      contentType: application/json
      properties:
        id:
          help: The ID of task.
          type: string
        assignee:
          help: The assignee details.
          type: object
        followers:
          help: The followers list from the project.
          type: list
        name:
          help: The name of project.
          type: string
        workspace:
          help: The workspace details of project.
          type: object
  updateProject:
    help: Update project in asana.
    http:
      port: 3000
      method: post
      path: /updateproject
      contentType: application/json
    arguments:
      id:
        type: string
        in: requestBody
        required: true
        help: The ID for project.
      name:
        type: string
        in: requestBody
        help: The updated name for project.
      notes:
        type: string
        in: requestBody
        help: The updated notes for project.
      color:
        type: string
        in: requestBody
        help: The updated color for the project.
      public:
        type: boolean
        in: requestBody
        help: Set true/false to keep your project public to organization.
    output:
      type: object
      contentType: application/json
      properties:
        id:
          help: The ID of project.
          type: string
        name:
          help: The name of project.
          type: string
        owner:
          help: The owner details of project.
          type: object
        workspace:
          help: The workspace details of project.
          type: object
        members:
          help: The members list from the project.
          type: list
        followers:
          help: The followers list from the project.
          type: list
  listProjectTasks:
    help: List all the tasks from project.
    http:
      port: 3000
      method: post
      path: /listprojecttasks
      contentType: application/json
    arguments:
      projectId:
        type: string
        in: requestBody
        required: true
        help: The project id to get all tasks.
    output:
      type: list
      contentType: application/json
      properties:
        id:
          help: The ID of task.
          type: string
        name:
          help: The name of project.
          type: string
  receive:
    help: Start receiving newly added task details from asana.
    events:
      task:
        help: Triggered anytime when any new task is added in asana.
        arguments:
          workspaceId:
            type: string
            in: requestBody
            help: The workspace ID to subscribe.
          projectId:
            type: string
            in: requestBody
            help: The project ID to subscribe.
          existing:
            type: boolean
            in: requestBody
            required: true
            help: Set true to get all existing tasks or false to get only new task added to board after subscription.
        http:
          port: 3000
          subscribe:
            method: post
            path: /subscribe
            contentType: application/json
        output:
          contentType: application/json
          type: object
          properties:
            id:
              help: The ID of task.
              type: string
            assignee:
              help: The assignee details.
              type: object
            followers:
              help: The followers list from the project.
              type: list
            name:
              help: The name of project.
              type: string
            workspace:
              help: The workspace details of project.
              type: object
environment:
  ACCESS_TOKEN:
    type: string
    required: true
    help: The access token of asana account.
